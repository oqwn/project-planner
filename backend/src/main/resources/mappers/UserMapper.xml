<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.projectplanner.mapper.UserMapper">

    <resultMap id="userResultMap" type="User">
        <id property="id" column="id" />
        <result property="email" column="email" />
        <result property="name" column="name" />
        <result property="passwordHash" column="password_hash" />
        <result property="role" column="role" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
        <result property="interests" column="interests" typeHandler="org.apache.ibatis.type.ArrayTypeHandler" />
        <result property="associations" column="associations" typeHandler="org.apache.ibatis.type.ArrayTypeHandler" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <insert id="insert">
        INSERT INTO users (id, email, name, password_hash, role, interests, associations, created_at, updated_at)
        VALUES (#{id}, #{email}, #{name}, #{passwordHash}, #{role}::user_role, #{interests}, #{associations}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="update">
        UPDATE users 
        SET email = #{email}, 
            name = #{name}, 
            password_hash = #{passwordHash}, 
            role = #{role}::user_role, 
            interests = #{interests}, 
            associations = #{associations},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <select id="findById" resultMap="userResultMap">
        SELECT * FROM users WHERE id = #{id}
    </select>

    <select id="findByEmail" resultMap="userResultMap">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <select id="findAll" resultMap="userResultMap">
        SELECT * FROM users ORDER BY created_at DESC
    </select>

    <select id="findByRole" resultMap="userResultMap">
        SELECT * FROM users WHERE role = #{role}::user_role ORDER BY created_at DESC
    </select>

</mapper>